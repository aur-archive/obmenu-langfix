diff -aur src/obmenu-1.0/build/lib/obxml.py src-new/obmenu-1.0/build/lib/obxml.py
--- src/obmenu-1.0/build/lib/obxml.py	2012-07-17 15:03:43.000000000 +0200
+++ src-new/obmenu-1.0/build/lib/obxml.py	2012-07-17 14:10:44.000000000 +0200
@@ -1,4 +1,4 @@
-#!/usr/bin/python22
+#!/usr/bin/python2
 #
 #  Openbox Menu Editor 1.0 beta
 # 
diff -aur src/obmenu-1.0/build/scripts-2.7/obm-xdg src-new/obmenu-1.0/build/scripts-2.7/obm-xdg
--- src/obmenu-1.0/build/scripts-2.7/obm-xdg	2012-07-17 15:03:43.314144768 +0200
+++ src-new/obmenu-1.0/build/scripts-2.7/obm-xdg	2012-07-17 14:10:44.198034187 +0200
@@ -49,8 +49,6 @@
          self.lang=lang[0]
       else:
          return
-   def __str__(self):
-     return str(self.lang)+"_"+str(self.country)+"."+str(self.encoding)
    def match_with(self,other):
      if (self.lang == None) or self.lang==other.lang:
         if (self.country == None) or self.country==other.country:
@@ -241,18 +239,18 @@
 					if accuracy< 2:
 						title=name
 						accuracy=2
-				else:
-					lang=LocaleName(lang)
-					match=wanted_locale.match_with(lang)
-					if (match==LocaleName.MATCH_LANG) and (accuracy<3):
-						title = name
-						accuracy = 3
-					elif ((match==LocaleName.MATCH_COUNTRY) or (match==LocaleName.MATCH_ENCODING)) and (accuracy<4):
-							title = name
-							accuracy = 4
-					elif (title == "") and (accuracy<1):
-							accuracy = 1
+					else:
+						lang=LocaleName(lang)
+						match=wanted_locale.match_with(lang)
+						if (match==LocaleName.MATCH_LANG) and (accuracy<3):
 							title = name
+							accuracy = 3
+						elif ((match==LocaleName.MATCH_COUNTRY) or (match==LocaleName.MATCH_ENCODING)) and (accuracy<4):
+								title = name
+								accuracy = 4
+						elif (title == "") and (accuracy<1):
+								accuracy = 1
+								title = name
 		return unicode(title.strip() ,"utf-8")
 	
 	def parseDesktopFile(self, filename, language):
@@ -260,6 +258,7 @@
 		exe = ""
 		cats = []
 		accuracy = 0
+		
 		if language:
 			wanted_locale=LocaleName(language)
 		else:
@@ -279,19 +278,18 @@
 					if accuracy< 2:
 						title=name
 						accuracy=2
-				else:
-					lang=LocaleName(lang)
-					match=wanted_locale.match_with(lang)
-					#print(str(lang)+" matches by "+str(match))
-					if (match==LocaleName.MATCH_LANG) and (accuracy<3):
-						title = name
-						accuracy = 3
-					elif ((match==LocaleName.MATCH_COUNTRY) or (match==LocaleName.MATCH_ENCODING)) and (accuracy<4):
-							title = name
-							accuracy = 4
-					elif (title == "") and (accuracy<1):
-							accuracy = 1
+					else:
+						lang=LocaleName(lang)
+						match=wanted_locale.match_with(lang)
+						if (match==LocaleName.MATCH_LANG) and (accuracy<3):
 							title = name
+							accuracy = 3
+						elif ((match==LocaleName.MATCH_COUNTRY) or (match==LocaleName.MATCH_ENCODING)) and (accuracy<4):
+								title = name
+								accuracy = 4
+						elif (title == "") and (accuracy<1):
+								accuracy = 1
+								title = name
 			elif i == "exec":
 				exe = ""
 				jump = False
@@ -523,7 +521,7 @@
 					break
 			if not new:
 				cache = open(cachefile)
-				#print cache.read()
+				print cache.read()
 				cache.close()
 				sys.exit()
 				
diff -aur src/obmenu-1.0/obxml.py src-new/obmenu-1.0/obxml.py
--- src/obmenu-1.0/obxml.py	2006-02-01 00:26:38.000000000 +0100
+++ src-new/obmenu-1.0/obxml.py	2012-07-17 14:10:44.001368585 +0200
@@ -1,4 +1,4 @@
-#!/usr/bin/python
+#!/usr/bin/python2
 #
 #  Openbox Menu Editor 1.0 beta
 # 
diff -aur src/obmenu-1.0/pipes/obm-xdg src-new/obmenu-1.0/pipes/obm-xdg
--- src/obmenu-1.0/pipes/obm-xdg	2006-01-24 16:39:36.000000000 +0100
+++ src-new/obmenu-1.0/pipes/obm-xdg	2012-07-17 16:01:18.458760396 +0200
@@ -22,6 +22,46 @@
 #
 
 import xml.dom.minidom, obxml, os, sys, time
+class LocaleName:
+   MATCH_NONE=0
+   MATCH_LANG=1
+   MATCH_COUNTRY=2
+   MATCH_ENCODING=3
+   def __init__(self,string):
+      self.country=None
+      self.lang=None
+      self.encoding=None
+      if string == None:
+         return
+      lang=string.split('.')
+      if len(lang) == 2:
+         self.encoding=lang[1]
+         lang=lang[0]
+      elif len(lang) == 1:
+         lang=lang[0]
+      else:
+         return
+      lang=string.split('_')
+      if len(lang) == 2:
+         self.lang=lang[0]
+         self.country=lang[1]
+      elif len(lang) == 1:
+         self.lang=lang[0]
+      else:
+         return
+   def __str__(self):
+     return str(self.lang)+"_"+str(self.country)+"."+str(self.encoding)
+   def match_with(self,other):
+     if (self.lang == None) or self.lang==other.lang:
+        if (self.country == None) or self.country==other.country:
+           if (self.encoding == None) or self.encoding==other.encoding:
+              return LocaleName.MATCH_ENCODING
+           else:
+              return LocaleName.MATCH_COUNTRY
+        else:
+           return LocaleName.MATCH_LANG
+     else:
+        return LocaleName.MATCH_NONE
 
 class XdgMenu:
 	
@@ -185,20 +225,8 @@
 	
 	def parseDirectoryFile(self, filename, language):
 		title = ""
-		accuracy = 0
-		
-		if language:
-			l = language.split(".")[0].split("_")
-			if len(l) == 2:
-				lang_major = l[0]
-				lang_minor = l[1]
-			else:
-				lang_major = l[0]
-				lang_minor = None
-		else:
-			lang_major = "en"
-			lang_minor = None
-
+		accuracy = 0 # 0=no match 1=any match 2=destination language is None 3=LANG 4=COUNTRY
+		wanted_locale=LocaleName(language)
 		for line in open(filename):
 			i = line.split("=")[0].lower()
 			n = line.find("=")
@@ -209,16 +237,22 @@
 				else:
 					lang = None
 
-				if lang:
-					if lang_major in lang and (title == "" or accuracy < 2):
-						title = name
-						accuracy = 2
-					if lang_minor and lang_major in lang and lang_minor in lang:
+				if lang == None:
+					if accuracy< 2:
+						title=name
+						accuracy=2
+				else:
+					lang=LocaleName(lang)
+					match=wanted_locale.match_with(lang)
+					if (match==LocaleName.MATCH_LANG) and (accuracy<3):
 						title = name
 						accuracy = 3
-				elif title == "":
-						accuracy = 1
-						title = name
+					elif ((match==LocaleName.MATCH_COUNTRY) or (match==LocaleName.MATCH_ENCODING)) and (accuracy<4):
+							title = name
+							accuracy = 4
+					elif (title == "") and (accuracy<1):
+							accuracy = 1
+							title = name
 		return unicode(title.strip() ,"utf-8")
 	
 	def parseDesktopFile(self, filename, language):
@@ -226,18 +260,10 @@
 		exe = ""
 		cats = []
 		accuracy = 0
-		
 		if language:
-			l = language.split(".")[0].split("_")
-			if len(l) == 2:
-				lang_major = l[0]
-				lang_minor = l[1]
-			else:
-				lang_major = l[0]
-				lang_minor = None
+			wanted_locale=LocaleName(language)
 		else:
-			lang_major = "en"
-			lang_minor = None
+			wanted_locale=LocaleName("en")
 
 		for line in open(filename):
 			i = line.split("=")[0].lower()
@@ -249,17 +275,23 @@
 				else:
 					lang = None
 
-				if lang:
-					if lang_major in lang and (title == "" or accuracy < 2):
-						title = name
-						accuracy = 2
-					if lang_minor and lang_major in lang and lang_minor in lang:
+				if lang == None:
+					if accuracy< 2:
+						title=name
+						accuracy=2
+				else:
+					lang=LocaleName(lang)
+					match=wanted_locale.match_with(lang)
+					#print(str(lang)+" matches by "+str(match))
+					if (match==LocaleName.MATCH_LANG) and (accuracy<3):
 						title = name
 						accuracy = 3
-				elif title == "":
-						accuracy = 1
-						title = name
-
+					elif ((match==LocaleName.MATCH_COUNTRY) or (match==LocaleName.MATCH_ENCODING)) and (accuracy<4):
+							title = name
+							accuracy = 4
+					elif (title == "") and (accuracy<1):
+							accuracy = 1
+							title = name
 			elif i == "exec":
 				exe = ""
 				jump = False
